{"version":3,"sources":["store/reducers/songs.js","store/action-types.js","store/reducers/artist.js","store/actions/artist.js","store/actions/songs.js","components/social.jsx","components/song/play.jsx","components/song/timeline.jsx","components/song/control.jsx","components/song/index.jsx","components/songs.jsx","components/album.jsx","components/video.jsx","components/artist.jsx","App.js","index.js","store/store.js"],"names":["defaultState","defaultSongState","isPlaying","isRewinding","isSwitched","duration","time","interval","timelane","x","width","state","action","type","stateCopy","songs","forEach","song","name","image","songPlayerUrl","player","Audio","volume","clearInterval","pause","play","toFixed","currentTime","description","socials","twitter","facebook","instagram","albums","video","data","headerImage","image_header","twitter_name","facebook_name","instagram_name","initArtist","payload","dispatch","axios","get","then","response","initSongs","initTimelane","playSong","pauseSong","stopSong","updateSong","rewindSong","Social","props","onIconEnter","setState","isStopped","onIconLeave","className","onMouseEnter","this","onMouseLeave","href","link","ref","lottie","options","animationData","loop","isLooped","autoplay","React","Component","Play","onIconClick","setInterval","current","anim","playSegments","createRef","goToAndStop","onClick","mapDispatchToProps","actions","connect","ownProps","Timeline","minutes","Math","floor","seconds","timeline","init","getBoundingClientRect","offsetWidth","max","value","children","String","padStart","getTimeLeft","Control","onMouseDown","dragHandler","style","left","Song","isDragged","onMouseUp","evt","preventDefault","onMouseMove","screenX","url","src","alt","controlHandler","artist","Songs","map","index","key","Album","date","Video","title","height","frameBorder","allow","allowFullScreen","socialsMap","Artist","changeDrag","backgroundImage","Object","entries","userName","split","item","length","slice","album","App","ReactDOM","render","store","composedEnhancer","compose","applyMiddleware","thunkMiddleware","logger","devToolsEnhancer","createReduxStore","combineReducers","reducers","createStore","document","getElementById"],"mappings":"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","file":"static/js/main.cc713a23.chunk.js","sourcesContent":["import * as types from '../action-types'\n\nconst defaultState = {}\nconst defaultSongState = {\n    isPlaying: false,\n    isRewinding: false,\n    isSwitched: false,\n    duration: 30,\n    time: 0,\n    interval: null,\n    timelane: {\n        x: 0,\n        width: 0\n    }\n}\n\nexport default (state = defaultState, action) => {\n    switch (action.type) {\n        case types.INIT_SONGS: {\n            const stateCopy = {\n                ...state\n            }\n\n            action.songs.forEach(song => {\n                stateCopy[song.name] = {\n                    image: song.image,\n                    songPlayerUrl: song.songPlayerUrl,\n                    player: new Audio(song.songPlayerUrl),\n                    ...defaultSongState\n                }\n\n                stateCopy[song.name].player.volume = 0.05\n            });\n\n\n            return stateCopy\n        }\n\n        case types.INIT_TIMELANE: {\n            const stateCopy = {\n                ...state\n            }\n\n            stateCopy[action.name].timelane = {\n                x: action.x,\n                width: action.width\n            }\n\n            return stateCopy\n        }\n\n        case types.PLAY: {\n            const stateCopy = {\n                ...state\n            }\n\n            // Other songs pause\n            for (const song in stateCopy) {\n                stateCopy[song].isSwitched = false\n\n                if (stateCopy[song].isPlaying) {\n                    stateCopy[song].isSwitched = true\n                }\n\n                stateCopy[song].isPlaying = false\n\n                stateCopy[song].interval = clearInterval(stateCopy[song].interval) || null\n                stateCopy[song].player.pause()\n            }\n\n            stateCopy[action.name].interval = action.interval\n            stateCopy[action.name].isPlaying = true\n            stateCopy[action.name].isRewinding = false\n            stateCopy[action.name].player.play()\n\n            return stateCopy\n        }\n\n        case types.PAUSE: {\n            const stateCopy = {\n                ...state\n            }\n\n            stateCopy[action.name].interval = clearInterval(stateCopy[action.name].interval) || null\n            stateCopy[action.name].isPlaying = false\n            stateCopy[action.name].player.pause()\n\n            return stateCopy\n        }\n\n        case types.TIME_UPDATE: {\n            const stateCopy = {\n                ...state\n            }\n\n            stateCopy[action.name].time = +(stateCopy[action.name].time + 0.01).toFixed(2)\n\n            return stateCopy\n        }\n\n        case types.STOP: {\n            const stateCopy = {\n                ...state\n            }\n\n            stateCopy[action.name].interval = clearInterval(stateCopy[action.name].interval) || null\n            stateCopy[action.name].isPlaying = false\n            stateCopy[action.name].time = 0\n            stateCopy[action.name].player.pause()\n            stateCopy[action.name].player.currentTime = 0\n\n\n            return stateCopy\n        }\n\n        case types.REWIND: {\n            const stateCopy = {\n                ...state\n            }\n\n            stateCopy[action.name].interval = clearInterval(stateCopy[action.name].interval) || null\n            stateCopy[action.name].isPlaying = false\n            stateCopy[action.name].isRewinding = true\n            stateCopy[action.name].player.pause()\n            stateCopy[action.name].time = action.time\n            stateCopy[action.name].player.currentTime = action.time\n\n\n            return stateCopy\n        }\n\n        default: {\n            return state\n        }\n    }\n}","// Artist\nexport const INIT_ARTIST = 'INIT_ARTIST'\n\n// Songs\nexport const INIT_SONGS = 'INIT_SONGS'\n\n// Song\nexport const PLAY = 'PLAY'\nexport const PAUSE = 'PAUSE'\nexport const TIME_UPDATE = 'TIME_UPDATE'\nexport const STOP = 'STOP'\nexport const REWIND = 'REWIND'\n\n// Timelane\nexport const INIT_TIMELANE = 'INIT_TIMELANE'","import * as types from '../action-types'\n\nconst defaultState = {\n    name: \"\",\n    description: \"\",\n    socials: {\n        twitter: \"\",\n        facebook: \"\",\n        instagram: \"\"\n    },\n    albums: [],\n    video: \"\"\n}\n\nexport default (state = defaultState, action) => {\n    switch (action.type) {\n        case types.INIT_ARTIST: {\n            const stateCopy = { ...state, ...action.data }\n\n            stateCopy.headerImage = stateCopy.image_header\n\n            delete stateCopy.image_header\n\n            stateCopy.socials.twitter = action.data.twitter_name\n            stateCopy.socials.facebook = action.data.facebook_name\n            stateCopy.socials.instagram = action.data.instagram_name\n\n            delete stateCopy.twitter_name\n            delete stateCopy.facebook_name\n            delete stateCopy.instagram_name\n\n            return stateCopy\n        }\n\n        default: {\n            return state\n        }\n    }\n}","import * as types from '../action-types'\nimport axios from \"axios\";\n\nexport const initArtist = (payload) => (dispatch) => {\n    axios.get(`/api/artist/${payload}`)\n        .then((response) => {\n            dispatch({\n                type: types.INIT_ARTIST,\n                data: response.data\n            })\n        })\n}","import * as types from '../action-types'\n\nexport const initSongs = (payload) => (dispatch) => {\n    dispatch({\n        type: types.INIT_SONGS,\n        songs: payload\n    })\n}\n\nexport const initTimelane = (payload) => (dispatch) => {\n    dispatch({\n        type: types.INIT_TIMELANE,\n        name: payload.name,\n        x: payload.x,\n        width: payload.width\n    })\n}\n\nexport const playSong = (payload) => (dispatch) => {\n    dispatch({\n        type: types.PLAY,\n        name: payload.name,\n        interval: payload.interval\n    })\n}\n\nexport const pauseSong = (payload) => (dispatch) => {\n    dispatch({\n        type: types.PAUSE,\n        name: payload.name\n    })\n}\n\nexport const stopSong = (payload) => (dispatch) => {\n    dispatch({\n        type: types.STOP,\n        name: payload.name\n    })\n}\n\nexport const updateSong = (payload) => (dispatch) => {\n    dispatch({\n        type: types.TIME_UPDATE,\n        name: payload\n    })\n}\n\nexport const rewindSong = (payload) => (dispatch) => {\n    dispatch({\n        type: types.REWIND,\n        name: payload.name,\n        time: payload.time\n    })\n}","import React from 'react'\nimport Lottie from 'lottie-react-web'\nimport '../App.scss'\n\nexport default class Social extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      isStopped: true,\n    }\n  }\n\n  onIconEnter = () => {\n    this.setState({ isStopped: false })\n  }\n\n  onIconLeave = () => {\n    this.setState({ isStopped: true })\n  }\n\n  render() {\n    return (\n      <li\n        className=\"artist__social\"\n        onMouseEnter={this.onIconEnter}\n        onMouseLeave={this.onIconLeave}\n      >\n        <a href={this.props.link}>\n          <Lottie\n            ref={this.lottie}\n            options={{\n              animationData: this.props.data,\n              loop: this.props.isLooped,\n              autoplay: false,\n            }}\n            isStopped={this.state.isStopped}\n          />\n        </a>\n      </li>\n    )\n  }\n}\n","import React from 'react'\nimport Lottie from 'lottie-react-web'\n\nimport { connect } from 'react-redux'\nimport { actions } from '../../store'\n\nimport play from '../../lottie/play'\n\nclass Play extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.lottie = React.createRef()\n  }\n\n  componentDidMount() {\n    this.lottie.current.anim.goToAndStop(7.99, true)\n  }\n\n  shouldComponentUpdate() {\n    if (this.props.time < this.props.duration) {\n      return false\n    }\n\n    return true\n  }\n\n  onIconClick = () => {\n    switch (true) {\n      case this.props.isPlaying: {\n        this.props.pauseSong({\n          name: this.props.name,\n        })\n\n        break\n      }\n\n      default: {\n        this.props.playSong({\n          name: this.props.name,\n          interval: setInterval(() => {\n            this.props.updateSong(this.props.name)\n\n            if (this.props.time >= this.props.duration) {\n              this.props.stopSong({\n                name: this.props.name,\n              })\n            }\n          }, 10),\n        })\n      }\n    }\n\n    this.lottie.current.anim.playSegments(\n      this.props.isPlaying ? [0, 8.75] : [8.75, 0],\n      true\n    )\n  }\n\n  render() {\n    return (\n      <button className=\"song__play\" onClick={this.onIconClick}>\n        <Lottie\n          ref={this.lottie}\n          options={{\n            animationData: play,\n            loop: false,\n            autoplay: false,\n          }}\n        />\n      </button>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    name: ownProps.name,\n    isPlaying: state.songs[ownProps.name].isPlaying,\n    isSwitched: state.songs[ownProps.name].isSwitched,\n    time: state.songs[ownProps.name].time,\n    duration: state.songs[ownProps.name].duration,\n  }\n}\n\nconst mapDispatchToProps = {\n  playSong: actions.playSong,\n  pauseSong: actions.pauseSong,\n  updateSong: actions.updateSong,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Play)\n","import React from 'react'\n\nimport { connect } from 'react-redux'\nimport { actions } from '../../store'\n\nconst getTimeLeft = (duration, time) => {\n  const minutes = Math.floor((duration - time) / 60)\n  const seconds = String(Math.floor((duration - time) % 60)).padStart(2, '0')\n\n  return `${minutes}:${seconds}`\n}\n\nclass Timeline extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      minutes: Math.floor((this.props.duration - this.props.time) / 60),\n      seconds: Math.floor((this.props.duration - this.props.time) % 60),\n    }\n\n    this.timeline = React.createRef()\n  }\n\n  componentDidMount() {\n    this.props.init({\n      name: this.props.name,\n      x: this.timeline.current.getBoundingClientRect().x,\n      width: this.timeline.current.offsetWidth,\n    })\n  }\n\n  render() {\n    return (\n      <div ref={this.timeline} className=\"song__progress-wrapper\">\n        <progress\n          className=\"song__progress\"\n          max={this.props.duration}\n          value={this.props.time}\n        ></progress>\n        {this.props.children}\n        <span className=\"song__time\">\n          {getTimeLeft(this.props.duration, this.props.time)}\n        </span>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    name: ownProps.name,\n    time: state.songs[ownProps.name].time,\n    duration: state.songs[ownProps.name].duration,\n    x: state.songs[ownProps.name].timelane.x,\n    width: state.songs[ownProps.name].timelane.width,\n  }\n}\n\nconst mapDispatchToProps = {\n  init: actions.initTimelane,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Timeline)\n","import React from 'react'\n\nconst Control = props => {\n  return (\n    <div\n      onMouseDown={props.dragHandler}\n      className=\"song__control\"\n      style={{\n        left: `${(props.time / props.duration) * 98}%`,\n      }}\n    ></div>\n  )\n}\n\nexport default Control\n","import React from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { actions } from '../../store'\r\n\r\nimport Play from './play'\r\nimport Timeline from './timeline'\r\nimport Control from './control'\r\n\r\nclass Song extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      isDragged: false,\r\n    }\r\n  }\r\n\r\n  onMouseDown = () => {\r\n    this.setState({\r\n      isDragged: true,\r\n    })\r\n  }\r\n\r\n  onMouseUp = evt => {\r\n    evt.preventDefault()\r\n\r\n    if (this.state.isDragged) {\r\n      this.props.playSong({\r\n        name: this.props.name,\r\n        interval: setInterval(() => {\r\n          this.props.updateSong(this.props.name)\r\n\r\n          if (this.props.time >= this.props.duration) {\r\n            this.props.stopSong({\r\n              name: this.props.name,\r\n            })\r\n          }\r\n        }, 10),\r\n      })\r\n    }\r\n\r\n    this.setState({\r\n      isDragged: false,\r\n    })\r\n  }\r\n\r\n  onMouseMove = evt => {\r\n    evt.preventDefault()\r\n\r\n    if (this.state.isDragged) {\r\n      switch (true) {\r\n        case (30 * (evt.screenX - this.props.timelane.x)) /\r\n          this.props.timelane.width <\r\n          0: {\r\n          this.props.rewindSong({\r\n            name: this.props.name,\r\n            time: 0,\r\n          })\r\n\r\n          break\r\n        }\r\n\r\n        case (30 * (evt.screenX - this.props.timelane.x)) /\r\n          this.props.timelane.width >\r\n          30: {\r\n          this.props.rewindSong({\r\n            name: this.props.name,\r\n            time: 30,\r\n          })\r\n          break\r\n        }\r\n\r\n        default: {\r\n          this.props.rewindSong({\r\n            name: this.props.name,\r\n            time:\r\n              (30 * (evt.screenX - this.props.timelane.x)) /\r\n              this.props.timelane.width,\r\n          })\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <li\r\n        onMouseMove={this.onMouseMove}\r\n        onMouseUp={this.onMouseUp}\r\n        onMouseLeave={this.onMouseUp}\r\n        className={`song${\r\n          this.props.isPlaying || this.props.isRewinding ? ' song--playing' : ''\r\n        }`}\r\n      >\r\n        {this.props.url && <Play name={this.props.name} />}\r\n        <img src={this.props.image} alt={this.props.name} />\r\n        <div className=\"song__info\">\r\n          <h3>{this.props.name}</h3>\r\n          {this.props.url && (\r\n            <Timeline\r\n              controlHandler={this.onMouseDown}\r\n              isDragged={this.state.isDragged}\r\n              name={this.props.name}\r\n            >\r\n              <Control\r\n                isDragged={this.state.isDragged}\r\n                dragHandler={this.onMouseDown}\r\n                duration={this.props.duration}\r\n                time={this.props.time}\r\n                name={this.props.name}\r\n              />\r\n            </Timeline>\r\n          )}\r\n          <h4>{this.props.artist}</h4>\r\n        </div>\r\n      </li>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    name: ownProps.name,\r\n    isPlaying: state.songs[ownProps.name].isPlaying,\r\n    isRewinding: state.songs[ownProps.name].isRewinding,\r\n    time: state.songs[ownProps.name].time,\r\n    duration: state.songs[ownProps.name].duration,\r\n    player: state.songs[ownProps.name].player,\r\n    timelane: state.songs[ownProps.name].timelane,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  playSong: actions.playSong,\r\n  pauseSong: actions.pauseSong,\r\n  stopSong: actions.stopSong,\r\n  rewindSong: actions.rewindSong,\r\n  updateSong: actions.updateSong,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Song)\r\n","import React from 'react'\n\nimport { connect } from 'react-redux'\nimport { actions } from '../store'\n\nimport Song from './song'\n\nclass Songs extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {}\n\n    this.props.initSongs(this.props.songs)\n  }\n\n  render() {\n    return (\n      <article className=\"artist__songs\">\n        <h4>Popular Songs</h4>\n        <ul>\n          {this.props.songs.map((song, index) => (\n            <Song\n              key={song.name}\n              name={song.name}\n              artist={this.props.artist}\n              image={song.image}\n              url={song.songPlayerUrl}\n            />\n          ))}\n        </ul>\n      </article>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    songs: ownProps.songs,\n  }\n}\n\nconst mapDispatchToProps = {\n  initSongs: actions.initSongs,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Songs)\n","import React from 'react'\r\nimport '../App.scss'\r\n\r\nconst Album = props => {\r\n  return (\r\n    <li className=\"album\">\r\n      <img src={props.image} alt={props.name} />\r\n      <h3>{props.name}</h3>\r\n      <span>{props.date}</span>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Album\r\n","import React from 'react'\nimport '../App.scss'\n\nconst Video = props => {\n  return (\n    <iframe\n      title=\"Clip\"\n      width=\"560\"\n      height=\"315\"\n      src={props.link}\n      frameBorder=\"0\"\n      allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n      allowFullScreen\n    ></iframe>\n  )\n}\n\nexport default Video\n","import React from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { actions } from '../store'\r\n\r\nimport Social from './social'\r\nimport Songs from './songs'\r\nimport Album from './album'\r\nimport Video from './video'\r\n\r\nimport twitter from '../lottie/twitter'\r\nimport facebook from '../lottie/facebook'\r\nimport instagram from '../lottie/instagram'\r\n\r\nimport '../App.scss'\r\n\r\nconst socialsMap = {\r\n  twitter: {\r\n    isLooped: true,\r\n    data: twitter,\r\n  },\r\n  facebook: {\r\n    isLooped: true,\r\n    data: facebook,\r\n  },\r\n  instagram: {\r\n    isLooped: false,\r\n    data: instagram,\r\n  },\r\n}\r\n\r\nclass Artist extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.props.initArtist('arChiTecTs')\r\n  }\r\n\r\n  onMouseMove = evt => {\r\n    if (this.props.isDragged) {\r\n      evt.preventDefault()\r\n      this.props.changeDrag({\r\n        isDragged: true,\r\n        x: evt.screenX,\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"container\"\r\n        onMouseUp={this.onMouseUp}\r\n        onMouseMove={this.onMouseMove}\r\n      >\r\n        <section className=\"artist\">\r\n          <div\r\n            className=\"artist__header\"\r\n            style={{\r\n              backgroundImage: `url(${this.props.headerImage}`,\r\n            }}\r\n          ></div>\r\n          <div className=\"artist__info\">\r\n            <div className=\"artist__block\">\r\n              <img\r\n                src={this.props.image}\r\n                alt=\"Artist\"\r\n                className=\"artist__image\"\r\n              />\r\n              <h2 className=\"artist__name\">{this.props.name}</h2>\r\n              <ul className=\"artist__socials\">\r\n                {Object.entries(this.props.socials).map(([name, userName]) => {\r\n                  if (!userName) {\r\n                    return ''\r\n                  }\r\n\r\n                  return (\r\n                    <Social\r\n                      key={name}\r\n                      data={socialsMap[name].data}\r\n                      isLooped={socialsMap[name].isLooped}\r\n                      link={`https://${name}.com/${userName}`}\r\n                    />\r\n                  )\r\n                })}\r\n              </ul>\r\n              <div className=\"artist__description\">\r\n                {this.props.description.split('\\n\\n').map((item, index) => {\r\n                  return <p key={index}>{item}</p>\r\n                })}\r\n              </div>\r\n              {this.props.video && <Video link={this.props.video} />}\r\n            </div>\r\n            <div className=\"artist__block\">\r\n              {this.props.albums.length > 0 && (\r\n                <Songs\r\n                  songs={this.props.albums.slice(0, 3).map(album => ({\r\n                    ...album.songs[0],\r\n                    image: album.image,\r\n                  }))}\r\n                  artist={this.props.name}\r\n                />\r\n              )}\r\n              <article className=\"artist__albums\">\r\n                <h4>Latest Albums</h4>\r\n                <ul>\r\n                  {this.props.albums.map(album => (\r\n                    <Album\r\n                      key={album.name}\r\n                      name={album.name}\r\n                      date={album.date}\r\n                      image={album.image}\r\n                    />\r\n                  ))}\r\n                </ul>\r\n              </article>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({ ...state.artist })\r\n\r\nconst mapDispatchToProps = {\r\n  initArtist: actions.initArtist,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Artist)\r\n","import React from 'react';\n\nimport Artist from './components/artist';\n\nimport './App.scss';\n\nfunction App() {\n  return (\n    <Artist />\n  );\n}\n\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nimport { Provider } from 'react-redux'\nimport { createStore } from './store'\n\nimport './index.css'\n\nReactDOM.render(\n  <Provider store={createStore()}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n","import { createStore as createReduxStore, combineReducers, applyMiddleware, compose } from 'redux'\nimport { devToolsEnhancer } from 'redux-devtools-extension/developmentOnly'\n\nimport thunkMiddleware from 'redux-thunk'\nimport logger from 'redux-logger'\n\nimport * as reducers from './reducers'\n\nexport const createStore = () => {\n    const composedEnhancer = compose(\n        applyMiddleware(thunkMiddleware, logger),\n        devToolsEnhancer({\n            name: 'Sberify'\n        })\n    )\n\n    return createReduxStore(combineReducers(reducers), composedEnhancer)\n}\n"],"sourceRoot":""}